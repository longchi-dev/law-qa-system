spring.config.import=optional:file:.env[.properties]

# Application Name
spring.application.name=${APP_NAME}

# Database Configuration
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# Hibernate (JPA) Settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.sql.init.mode=never
spring.sql.init.continue-on-error=true
spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.format_sql=true


# Security Settings
spring.security.user.name=${SECURITY_USER}
spring.security.user.password=${SECURITY_PASSWORD}

# Thymeleaf Configuration
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8

# Session Configuration
server.servlet.session.timeout=30m
server.servlet.session.cookie.name=LAW_SESSION
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=false
server.servlet.session.tracking-modes=cookie


# Static Resources Configuration
spring.web.resources.static-locations=classpath:/static/
spring.web.resources.add-mappings=true


spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ss'Z'
spring.jackson.time-zone=UTC


# OAuth2 Google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

# OAuth2 Facebook
spring.security.oauth2.client.registration.facebook.client-id=${FACEBOOK_CLIENT_ID}
spring.security.oauth2.client.registration.facebook.client-secret=${FACEBOOK_CLIENT_SECRET}
spring.security.oauth2.client.registration.facebook.scope=public_profile,email
spring.security.oauth2.client.registration.facebook.redirect-uri=http://localhost:8080/login/oauth2/code/facebook
spring.security.oauth2.client.registration.facebook.client-name=Facebook
spring.security.oauth2.client.provider.facebook.authorization-uri=https://www.facebook.com/v18.0/dialog/oauth
spring.security.oauth2.client.provider.facebook.token-uri=https://graph.facebook.com/v18.0/oauth/access_token
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=id,name,email,picture
spring.security.oauth2.client.provider.facebook.user-name-attribute=id

openai.api.url=https://api.openai.com/v1/chat/completions

# OpenAI API Key
openai.api.key=${OPENAI_API_KEY}

# VNPay Payment
spring.application.api-prefix=/api/v1
payment.vnPay.url=https://sandbox.vnpayment.vn/paymentv2/vpcpay.html
payment.vnPay.apiUrl =https://sandbox.vnpayment.vn/merchant_webapi/api/transaction
payment.vnPay.tmnCode=${VNPAY_TMN_CODE}
payment.vnPay.secretKey=${VNPAY_SECRET_KEY}
payment.vnPay.returnUrl=${VNPAY_RETURN_URL}
payment.vnPay.version=2.1.0
payment.vnPay.command=pay
payment.vnPay.orderType=other

# Ollama API
ollama.api.url=${OLLAMA_API_URL}

# Email SMTP Config
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Elasticsearch
spring.elasticsearch.uris=${ELASTICSEARCH_URL}
spring.elasticsearch.rest.username=${ELASTICSEARCH_USERNAME}
spring.elasticsearch.rest.password=${ELASTICSEARCH_PASSWORD}



